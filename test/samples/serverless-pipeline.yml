stages:
- name: Build Stage
  inputs:
  - type: git
    branch: master
    service: ${REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
- name: Deploy Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
  triggers:
  - type: stage
  properties:
  - name: DATABASE
    value: "products"
    type: text
  jobs:
  - name: Deploy
    type: deployer
    artifact_dir: ''
    build_type: shell
    target:
      region_id: ${REGION_ID}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
      api_key: ${API_KEY}
    script: |-
      #!/bin/bash
      ibmcloud login -a ${CF_TARGET_URL} --apikey ${PIPELINE_BLUEMIX_API_KEY}
      ibmcloud target --cf -o ${CF_ORG} -s ${CF_SPACE}
      export MY_SERVICE=MyAnalyticsService
      export SERVICE_GUID=$(bx resource service-keys --instance-name $MY_SERVICE --output json | jq '.[0].guid' -r)
      export DATABASE_URL=$(bx resource service-key $SERVICE_GUID --output json | jq '.[0].credentials.url' -r)
      curl -X PUT "$DATABASE_URL/$DATABASE"
      chmod +x .bluemix/pipeline-DEPLOY.sh
      ./.bluemix/pipeline-DEPLOY.sh
- name: Health Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: Test
    type: deployer
    artifact_dir: ''
    build_type: shell
    target:
      region_id: ${REGION_ID}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
      api_key: ${API_KEY}
    script: |-
      #!/bin/sh
      ibmcloud login -a ${CF_TARGET_URL} --apikey ${PIPELINE_BLUEMIX_API_KEY}
      ibmcloud target --cf -o ${CF_ORG} -s ${CF_SPACE}
      if [ "$(bx wsk action invoke AcmeProject/readAll | grep ok:)" != "" ]; then
        echo "Successfully reached health endpoint."
      else
        echo "Could not reach the health endpoint."
        exit 1
      fi
    test_type: customimage
    docker_image: alpine
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: http://lms-api/v1/messaging/webhook/publish
